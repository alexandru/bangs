name: Publish Application on GitHub Pages
on:
  push:
    branches:
      - main
      
jobs:
  build:
    name: Build Kotlin/Wasm
    runs-on: ubuntu-latest
    steps:
    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '21'

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Compile and Test
      run: ./gradlew check

    - name: Build distribution
      run: ./gradlew jsBrowserDistribution

    - name: Fix permissions
      run: |
        chmod -v -R +rX "build/dist/js/productionExecutable/" | while read line; do
          echo "::warning title=Invalid file permissions automatically fixed::$line"
        done

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: build/dist/js/productionExecutable/

  deploy:
    needs: build
    permissions:
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        run: |
          ./scripts/deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#  invalidate-cache:
#    needs: deploy
#    runs-on: ubuntu-latest
#    steps:
#      - name: Invalidate Cloudflare Cache
#        env:
#          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
#          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
#          DOMAIN_NAME: alexn.org
#        run: |
#          CF_ZONEID=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones" -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" -H "Content-Type: application/json" | jq -r '.result[] | "\(.id) \(.name)"' | grep "$DOMAIN_NAME" | cut -f1 -d" ")
#          echo "Invalidating Cloudflare cache for zone $CF_ZONEID"
#          curl -s -X POST "https://api.cloudflare.com/client/v4/zones/$CF_ZONEID/purge_cache" -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" -H "Content-Type: application/json" --data '{"purge_everything":true}'
